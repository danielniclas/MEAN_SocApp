var app=angular.module("app",[]);console.log("In the MODULAR Angular files in 'ng' directory"),angular.module("app"),app.controller("PostsCtrl",["$scope","PostsSvc",function(o,t){o.addPost=function(){o.postBody&&(post={username:"MookersService",body:o.postBody},t.create(post).success(function(t){o.posts.unshift(t),o.postBody=null}),o.postBody=null)},t.fetch().success(function(t){o.posts=t})}]),angular.module("app"),app.service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("api/posts")},this.create=function(t){return o.post("api/posts",t)}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsInBvc3RzLmN0cmwuanMiLCJwb3N0cy5zdmMuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnNvbGUiLCJsb2ciLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiUG9zdHNTdmMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJwb3N0IiwidXNlcm5hbWUiLCJib2R5IiwiY3JlYXRlIiwic3VjY2VzcyIsInBvc3RzIiwidW5zaGlmdCIsImZldGNoIiwic2VydmljZSIsIiRodHRwIiwidGhpcyIsImdldCJdLCJtYXBwaW5ncyI6IkFBSUEsR0FBQUEsS0FBQUMsUUFBQUMsT0FBQSxTQUVBQyxTQUFBQyxJQUFBLGtEQ0ZBSCxRQUFBQyxPQUFBLE9BRUFGLElBQUFLLFdBQUEsYUFBQSxTQUFBLFdBQUEsU0FBQUMsRUFBQUMsR0FFQUQsRUFBQUUsUUFBQSxXQUVBRixFQUFBRyxXQUVBQyxNQUNBQyxTQUFBLGlCQUNBQyxLQUFBTixFQUFBRyxVQUdBRixFQUFBTSxPQUFBSCxNQVdBSSxRQUFBLFNBQUFKLEdBRUFKLEVBQUFTLE1BQUFDLFFBQUFOLEdBSUFKLEVBQUFHLFNBQUEsT0FHQUgsRUFBQUcsU0FBQSxPQU9BRixFQUFBVSxRQUdBSCxRQUFBLFNBQUFDLEdBQ0FULEVBQUFTLE1BQUFBLE9DM0NBZCxRQUFBQyxPQUFBLE9BS0FGLElBQUFrQixRQUFBLFlBQUEsUUFBQSxTQUFBQyxHQUVBQyxLQUFBSCxNQUFBLFdBQ0EsTUFBQUUsR0FBQUUsSUFBQSxjQUVBRCxLQUFBUCxPQUFBLFNBQUFILEdBQ0EsTUFBQVMsR0FBQVQsS0FBQSxZQUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgZGFuaWVsbmljbGFzIG9uIDEvNC8xNi5cbiAqL1xuXG52YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtdKTsgICAgICAgICAgICAvLyAgPDwgIFNFVFRFUiBNT0RVTEUgLS0gIENhbGxlZCBPTkxZIE9OQ0UgYW5kIEZJUlNUXG5cbmNvbnNvbGUubG9nKFwiSW4gdGhlIE1PRFVMQVIgQW5ndWxhciBmaWxlcyBpbiAnbmcnIGRpcmVjdG9yeVwiKTsiLCIvKipcbiAqIENyZWF0ZWQgYnkgZGFuaWVsbmljbGFzIG9uIDEvNC8xNi5cbiAqL1xuXG5hbmd1bGFyLm1vZHVsZSgnYXBwJyk7ICAgICAgICAgIC8vICBHRVRURVIgTU9EVUxFXG5cbmFwcC5jb250cm9sbGVyKCdQb3N0c0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBQb3N0c1N2Yykge1xuXG4gICAgJHNjb3BlLmFkZFBvc3QgPSBmdW5jdGlvbigpe1xuXG4gICAgICAgIGlmKCRzY29wZS5wb3N0Qm9keSl7ICAgICAgICAgICAgICAgIC8vcG9zdEJvZHkgaXMgdGhlIHZhbHVlIG9mIHRoZSBpbnB1dCBmaWVsZFxuXG4gICAgICAgICAgICBwb3N0ID0ge1xuICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAgJ01vb2tlcnNTZXJ2aWNlJyxcbiAgICAgICAgICAgICAgICBib2R5OiAkc2NvcGUucG9zdEJvZHlcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIFBvc3RzU3ZjLmNyZWF0ZShwb3N0KVxuXG5cbiAgICAgICAgICAgICAgICAvLyRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCB7ICAgICAgLy8gICRodHRwIHJlcXVlc3QgdG8gRU5EUE9JTlQgIC0tICBUbyBOb2RlIEFQSVxuICAgICAgICAgICAgICAgIC8vICAgIC8vICBwb3N0KDEsMikgICAxLiAgL2FwaS9wb3N0LyBlbmRwb2ludCBOb2RlIEFQSSwgMi4gIE9CSkVDVCB0byBwb3N0XG4gICAgICAgICAgICAgICAgLy8gICAgLy8gIENSRUFURSBPQkpFQ1Q6XG4gICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAvLyAgICB1c2VybmFtZTogICdNb29rZXJzJyxcbiAgICAgICAgICAgICAgICAvLyAgICBib2R5OiAkc2NvcGUucG9zdEJvZHlcbiAgICAgICAgICAgICAgICAvL30pXG5cbiAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihwb3N0KSB7ICAgICAgICAgICAgICAgICAgICAvLyAgJGh0dHAgUkVUVVJOUyBBIFBST01JU0UgT0JKRUNUICEhISFcblxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUucG9zdHMudW5zaGlmdChwb3N0KTsgICAgIC8vICBpZiBjcmVhdGluZyBuZXcgT0JKRUNUIGlzIHN1Y2Nlc3MgLT4gQWRkIG9iamVjdCB0byBbcG9zdHNdIEFSUkFZXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gIGFycmF5LnVuc2hpZnQoKSAtLSAgYWRkIG5ldyBpdGVtcyB0byB0aGUgYmVnaW5uaW5nIG9mIGFuIGFycmF5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gIEFuZ3VsYXIgaXMgbWFuYWdpbmcgdGhlIEFSUkFZICEhISAgYXMgcGFydCBvZiAkc2NvcGVcblxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUucG9zdEJvZHkgPSBudWxsOyAgICAgICAgICAvLyAgc2V0IHBvc3RCb2R5IHZhbHVlIHRvIE5VTExcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJHNjb3BlLnBvc3RCb2R5ID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG5cblxuICAgIC8vICRodHRwLmdldCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0cycpICAgICAgICAvLyAgR2V0IFtwb3N0c10gQVJSQVkgICh0aGlzIGNvZGUgcmVwbGFjZXMgdGhlIFtwb3N0XSBBUlJBWSBiZWxvd1xuXG4gICAgUG9zdHNTdmMuZmV0Y2goKVxuXG5cbiAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3RzKSB7ICAgICAgICAgICAgICAgICAgICAgLy8gICRodHRwIHJldHVybnMgYSBQUk9NSVNFIE9CSkVDVFxuICAgICAgICAgICAgJHNjb3BlLnBvc3RzID0gcG9zdHNcbiAgICAgICAgfSk7XG5cbn0pO1xuIiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGRhbmllbG5pY2xhcyBvbiAxLzQvMTYuXG4gKi9cblxuXG5hbmd1bGFyLm1vZHVsZSgnYXBwJyk7ICAgICAgLy8gIEdFVFRFUiBNT0RVTEVcblxuXG4vLyAgU2VydmljZTpcblxuYXBwLnNlcnZpY2UoJ1Bvc3RzU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG5cbiAgICB0aGlzLmZldGNoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KCdhcGkvcG9zdHMnKTsgICAgICAgICAgICAgICAgIC8vICAkaHR0cC5nZXQoKSBTRVJWSUNFICAtLSByZXR1cm5zIGEgUFJPTUlTRVxuICAgIH07XG4gICAgdGhpcy5jcmVhdGUgPSBmdW5jdGlvbiAocG9zdCkgeyAgICAgICAgICAgICAgICAgICAgIC8vICAkaHR0cC5wb3N0KCkgU0VSVklDRSAtLSAgcmV0dXJucyBhIFBST01JU0VcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJ2FwaS9wb3N0cycsIHBvc3QpXG4gICAgfVxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
